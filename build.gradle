plugins {
  id 'edu.sc.seis.launch4j' version '1.6.1'
}

repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        mavenLocal()
}

apply plugin: 'java'
apply plugin: 'maven'

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version:'1.7.26'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.26'
    compile group: 'org.springframework', name: 'spring-context', version:'5.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version:'5.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version:'5.1.4.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version:'5.1.4.RELEASE'
    compile group: 'javax.jcr', name: 'jcr', version:'2.0'
    compile group: 'org.apache.jackrabbit', name: 'jackrabbit-spi', version:'2.19.1'
    compile group: 'org.apache.jackrabbit', name: 'jackrabbit-core', version:'2.19.1'
    compile group: 'org.apache.jackrabbit', name: 'jackrabbit-ocm', version:'1.5.3'
    compile group: 'com.h2database', name: 'h2', version:'1.4.199'
    compile group: 'org.apache.jcs', name: 'jcs', version:'1.3'
    compile group: 'org.freemarker', name: 'freemarker', version:'2.3.28'
    compile group: 'commons-codec', name: 'commons-codec', version:'1.10'
    compile group: 'com.sun.jersey', name: 'jersey-json', version:'1.19'
    compile group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version:'1.19.1'
    compile(group: 'com.sun.jersey.contribs', name: 'jersey-spring', version:'1.19.1') {
        exclude(module: 'spring')
        exclude(module: 'spring-core')
        exclude(module: 'spring-web')
        exclude(module: 'spring-beans')
        exclude(module: 'spring-context')
        exclude(module: 'spring-aop')
    }
    compile group: 'org.glassfish.grizzly', name: 'grizzly-http-server', version:'2.4.4'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-http-servlet', version:'2.4.4'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version:'1.2'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version:'1.61'
    testCompile group: 'org.springframework', name: 'spring-test', version:'5.1.4.RELEASE'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.10.19'
}

group = 'de.ronnyfriedland'
version = '0.9.3-SNAPSHOT
sourceCompatibility = 1.7
targetCompatibility = 1.7

// custom tasks

import org.apache.tools.ant.filters.*

processResources {
   filter ReplaceTokens, tokens: 
    ['project.version': project.version]
}

task processAppResources << {
  copy {
    from 'src/main/resources'
    into 'build/resources/main'
    filter ReplaceTokens, 
      tokens: ['project.version': project.version]
  }
  copy {
    from 'src/main/scripts'
    into 'build/scripts/main'
    filter ReplaceTokens, 
      tokens: ['project.version': project.version]
  }
  copy {
    from 'src/main/application'
    into 'build/application/main'
  }
}

task release << {
  copy {
    from 'build/application/main'
    into 'build/release/conf'
    include '**/*.properties', '**/*.xml'
  }
  copy {
    from 'build/application/main'
    into 'build/release/conf/ssl'
    include '**/*.jks'
  }
  copy {
    from 'build/application/locale'
    into 'build/release/conf/locale'
    include '**/*.properties'
  }
  copy {
    from 'build/scripts/main'
    into 'build/release'
  }
  copy {
    from 'build/libs'
    into 'build/release'
  }
  copy {
    from 'build/launch4j'
    into 'build/release'
    include '*.exe'
  }
  copy {
    from configurations.compile
    into 'build/release/lib'
  }
}

task zipRelease(type: Zip) {
    from 'build/release'
    into('/')
    destinationDir file('build')
    archiveName 'knowledgebase.zip'
}

jar {
  manifest { 
    attributes ('Implementation-Version': version,
      'Main-Class': "de.ronnyfriedland.knowledgebase.launcher.Launcher",
      'Class-Path': "conf/ " + configurations.runtime.files.collect {"lib/$it.name" }.join(' ')
    )
  }
}

launch4j {
  outfile = 'KB-2.0.exe'
  mainClassName = 'de.ronnyfriedland.knowledgebase.launcher.Launcher'
  jar = project.tasks[JavaPlugin.JAR_TASK_NAME].archiveName
  headerType = 'gui'
  dontWrapJar = 'true'
  mutexName = 'Knowledgebase 2.0'
  initialHeapSize = 32
  maxHeapSize = 512
  jreMinVersion = '1.7.0'
  bundledJrePath = '%JAVA_HOME%/jre'
  copyright = 'MIT'
  opt = '-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=heapdump.hprof -Djava.util.logging.config.file=conf/logging.properties'
}

def buildAliases = [
   'all' : ['clean', 'processResources', 'processAppResources', 'build', 'launch4j', 'release', 'zipRelease'],
   'rebuild' : ['clean', 'build']
]

def expandedTaskList = []

gradle.startParameter.taskNames.each {
    expandedTaskList << (buildAliases[it] ? buildAliases[it] : it)
}

gradle.startParameter.taskNames = expandedTaskList.flatten()
